name: Deb
on: [push]

jobs:
  build_deb:
    name: Build
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Crystal
        run: sudo snap install crystal --classic

      - name: Install dependencies
        run: sudo apt-get install -y libsystemd-dev dpkg fakeroot help2man lintian build-essential gcc pkg-config git tzdata libpcre3-dev libevent-dev libyaml-dev libgmp-dev libssl-dev libxml2-dev

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get Ubuntu release name
        run: echo "::set-env name=CODENAME::$(lsb_release -cs)"

      - name: Get version
        run: echo "::set-env name=VERSION::$(git describe --tags | cut -c2-)"

      - name: Get arch
        run: echo "::set-env name=ARCH::$(dpkg --print-architecture)"

      - name: Build deb package
        run: build/deb ${{ env.VERSION }} 1

      - name: Test start avalanchemq
        run: bin/avalanchemq --version

      - name: Test start avalanchemqctl
        run: bin/avalanchemqctl --version

      - name: Test start avalanchemqperf
        run: bin/avalanchemqperf --version

      - name: Upload github artifact
        uses: actions/upload-artifact@v2
        with:
          path: builds/debian/${{ env.CODENAME }}/avalanchemq_${{ env.VERSION }}-1_${{ env.ARCH }}.deb
          name: avalanchemq_${{ env.VERSION }}-1-${{ env.CODENAME }}_${{ env.ARCH }}.deb

      - name: Check if Git tag exists
        run: echo "::set-env name=HEAD_TAG::$(git tag --points-at HEAD)"

      - name: Install Ruby
        run: sudo snap install ruby --classic
        if: env.HEAD_TAG != ''

      - name: Install packagecloud cli
        run: ruby.gem install package_cloud
        if: env.HEAD_TAG != ''

      - name: Upload to packagecloud
        run: $HOME/.gem/bin/package_cloud push cloudamqp/avalanchemq/ubuntu/${{ env.CODENAME }} builds/debian/${{ env.CODENAME }}/avalanchemq_${{ env.VERSION }}-1_${{ env.ARCH }}.deb
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
        if: env.HEAD_TAG != ''
